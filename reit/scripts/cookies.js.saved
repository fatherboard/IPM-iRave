<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="36" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.0" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-US; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.generator">AbiWord</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<styles>
<s type="P" name="Normal" basedon="" followedby="Current Settings" props="font-family:Liberation Serif; margin-top:0pt; font-variant:normal; margin-left:0pt; text-indent:0in; widows:2; font-style:normal; font-weight:normal; text-decoration:none; color:000000; line-height:1.0; text-align:left; margin-bottom:0pt; text-position:normal; margin-right:0pt; bgcolor:transparent; font-size:12pt; font-stretch:normal"/>
</styles>
<pagesize pagetype="A4" orientation="portrait" width="210.000000" height="297.000000" units="mm" page-scale="1.000000"/>
<section xid="1">
<p style="Normal" xid="2" props="text-align:left; dom-dir:ltr">function updateCookie(name, value){</p>
<p style="Normal" xid="3" props="text-align:left; dom-dir:ltr">	document.cookie = name + "=" + value;</p>
<p style="Normal" xid="4">}</p>
<p style="Normal" xid="5"><c></c></p>
<p style="Normal" xid="6" props="text-align:left; dom-dir:ltr">function readCookie(name){</p>
<p style="Normal" xid="7" props="text-align:left; dom-dir:ltr">	var cookies = document.cookie;</p>
<p style="Normal" xid="8">	</p>
<p style="Normal" xid="9" props="text-align:left; dom-dir:ltr">	cookies = cookies.split(";");</p>
<p style="Normal" xid="10">	</p>
<p style="Normal" xid="11" props="text-align:left; dom-dir:ltr">	var len = cookies.length;</p>
<p style="Normal" xid="12">	</p>
<p style="Normal" xid="13" props="text-align:left; dom-dir:ltr">	for(i = 0; i &lt; len; i++){</p>
<p style="Normal" xid="14" props="text-align:left; dom-dir:ltr">		var cook = cookies[i].split("=");</p>
<p style="Normal" xid="15" props="text-align:left; dom-dir:ltr">		if(cook[0].trim() == name)</p>
<p style="Normal" xid="16" props="text-align:left; dom-dir:ltr">			return cook[1];</p>
<p style="Normal" xid="17">	}</p>
<p style="Normal" xid="18" props="text-align:left; dom-dir:ltr">	return "VOID";</p>
<p style="Normal" xid="19">}</p>
<p style="Normal" xid="20"><c></c></p>
<p style="Normal" xid="21" props="text-align:left; dom-dir:ltr">function hasCookie(name){</p>
<p style="Normal" xid="22" props="text-align:left; dom-dir:ltr">	if(readCookie(name) == "VOID")</p>
<p style="Normal" xid="23" props="text-align:left; dom-dir:ltr">		return false;</p>
<p style="Normal" xid="24" props="text-align:left; dom-dir:ltr">	else</p>
<p style="Normal" xid="25" props="text-align:left; dom-dir:ltr">		return true;</p>
<p style="Normal" xid="26">}</p>
<p style="Normal" xid="27"><c></c></p>
<p style="Normal" xid="28" props="text-align:left; dom-dir:ltr">function deleteCookie(name){</p>
<p style="Normal" xid="29" props="text-align:left; dom-dir:ltr">	if(!hasCookie(name))</p>
<p style="Normal" xid="30" props="text-align:left; dom-dir:ltr">		return;</p>
<p style="Normal" xid="31">	</p>
<p style="Normal" xid="32" props="text-align:left; dom-dir:ltr">	var expdt = new Date(1970,2,1,0,0,0);</p>
<p style="Normal" xid="33">	</p>
<p style="Normal" xid="34" props="text-align:left; dom-dir:ltr">	document.cookie = name + "=whatever; expires=" + expdt.toUTCString();</p>
<p style="Normal" xid="35">}</p>
<p style="Normal" xid="36"></p>
</section>
</abiword>
